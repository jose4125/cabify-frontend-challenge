// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Option should render with out crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Option
    counter={0}
    countryCode={
      Object {
        "code": "US",
        "dial_code": "+34",
        "name": "United State",
      }
    }
    countryCodeSelected="+34"
    handleOpenCloseDropdown={[MockFunction]}
    handleOptionselectedElement={[MockFunction]}
    index={2}
    setCountrySelected={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="dropdown__country"
        >
          <span
            className="flag US"
          />
          <p
            className="dropdown__country-name"
          >
            United State
          </p>
        </div>,
        "+34",
      ],
      "className": "dropdown__item selected",
      "onClick": [Function],
    },
    "ref": Object {
      "current": null,
    },
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="flag US"
            />,
            <p
              className="dropdown__country-name"
            >
              United State
            </p>,
          ],
          "className": "dropdown__country",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "flag US",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "United State",
              "className": "dropdown__country-name",
            },
            "ref": null,
            "rendered": "United State",
            "type": "p",
          },
        ],
        "type": "div",
      },
      "+34",
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="dropdown__country"
          >
            <span
              className="flag US"
            />
            <p
              className="dropdown__country-name"
            >
              United State
            </p>
          </div>,
          "+34",
        ],
        "className": "dropdown__item selected",
        "onClick": [Function],
      },
      "ref": Object {
        "current": null,
      },
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="flag US"
              />,
              <p
                className="dropdown__country-name"
              >
                United State
              </p>,
            ],
            "className": "dropdown__country",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "flag US",
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "United State",
                "className": "dropdown__country-name",
              },
              "ref": null,
              "rendered": "United State",
              "type": "p",
            },
          ],
          "type": "div",
        },
        "+34",
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
