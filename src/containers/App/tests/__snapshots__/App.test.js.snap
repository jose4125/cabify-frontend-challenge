// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test should render whit out crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <mockConstructor>
    [Function]
  </mockConstructor>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Card
          info={
            Object {
              "address": "",
              "email": "",
              "fullName": "",
              "jobDescription": "",
              "phoneNumber": "",
              "prefix": "",
              "website": "",
            }
          }
        />,
        <CardForm
          context={
            Object {
              "state": Object {
                "address": "",
                "email": "",
                "fullName": "",
                "jobDescription": "",
                "phoneNumber": "",
                "prefix": "",
                "website": "",
              },
            }
          }
        />,
      ],
      "className": "mainWrapper row",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "info": Object {
            "address": "",
            "email": "",
            "fullName": "",
            "jobDescription": "",
            "phoneNumber": "",
            "prefix": "",
            "website": "",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "context": Object {
            "state": Object {
              "address": "",
              "email": "",
              "fullName": "",
              "jobDescription": "",
              "phoneNumber": "",
              "prefix": "",
              "website": "",
            },
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Card
            info={
              Object {
                "address": "",
                "email": "",
                "fullName": "",
                "jobDescription": "",
                "phoneNumber": "",
                "prefix": "",
                "website": "",
              }
            }
          />,
          <CardForm
            context={
              Object {
                "state": Object {
                  "address": "",
                  "email": "",
                  "fullName": "",
                  "jobDescription": "",
                  "phoneNumber": "",
                  "prefix": "",
                  "website": "",
                },
              }
            }
          />,
        ],
        "className": "mainWrapper row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "info": Object {
              "address": "",
              "email": "",
              "fullName": "",
              "jobDescription": "",
              "phoneNumber": "",
              "prefix": "",
              "website": "",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "context": Object {
              "state": Object {
                "address": "",
                "email": "",
                "fullName": "",
                "jobDescription": "",
                "phoneNumber": "",
                "prefix": "",
                "website": "",
              },
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {},
  },
}
`;
